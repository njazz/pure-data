#N canvas 0 0 600 500 12;
#X text 30 50 General purpose Pd library used for work and education
purposes in centre of electroacoustic music of Moscow Conservatory
(CEAMMC) and ZIL-electro studio\. ;
#X obj 20 101 cnv 5 38 19 empty empty data 0 17 0 17 -262144 -49933 0;
#X obj 20 130 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 141 data.fifo;
#X text 150 141 First-In-First-Out (FIFO) queue data container;
#X obj 20 168 cnv 5 28 19 empty empty dyn 0 17 0 17 -262144 -49933 0;
#X obj 20 197 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 208 dyn.comp2~;
#X text 150 208 stereo dynamic range compressor;
#X obj 30 235 dyn.comp~;
#X text 150 235 mono dynamic range compressors;
#X obj 30 262 dyn.gate2~;
#X text 150 262 stereo signal gate;
#X obj 30 289 dyn.gate~;
#X text 150 289 mono signal gate;
#X obj 30 316 dyn.limit2~;
#X text 150 316 stereo 1176LN Peak Limiter;
#X obj 30 343 dyn.limit~;
#X text 150 343 mono 1176LN Peak Limiter;
#X obj 30 370 dyn.softclip~;
#X text 150 370 soft signal clip;
#X obj 20 397 cnv 5 28 19 empty empty env 0 17 0 17 -262144 -49933 0;
#X obj 20 426 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 437 env.adsr~;
#X text 150 437 ADSR (Attack \, Decay \, Sustain \, Release) envelope
generator;
#X obj 30 464 env.ar~;
#X text 150 464 AR (Attack \, Release) envelope generator (useful to
create percussion envelopes)\.;
#X obj 30 501 env.follow~;
#X text 150 501 Envelope follower with independent attack and release
times\.;
#X obj 20 538 cnv 5 27 19 empty empty flt 0 17 0 17 -262144 -49933 0;
#X obj 20 567 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 578 flt.dcblock2~;
#X text 150 578 stereo DC blocker;
#X obj 30 605 flt.dcblock~;
#X text 150 605 mono DC blocker;
#X obj 30 632 flt.eq_peak~;
#X text 150 632 second order "peaking equalizer" section (gain boost
or cut near some frequency)\.  Also called a "parametric equalizer"
section\.;
#X obj 30 683 flt.highshelf~;
#X text 150 683 gain boost|cut above some frequency;
#X obj 30 710 flt.lowshelf~;
#X text 150 710 gain boost|cut below some frequency;
#X obj 20 737 cnv 5 18 19 empty empty fx 0 17 0 17 -262144 -49933 0;
#X obj 20 766 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 777 fx.pitchshift~;
#X text 150 777 simple pitch shifter based on 2 delay lines;
#X obj 20 804 cnv 5 59 19 empty empty global 0 17 0 17 -262144 -49933
0;
#X obj 20 833 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 844 global.float;
#X text 150 844 global named float object;
#X obj 30 871 global.int;
#X text 150 871 global named integer object;
#X obj 30 898 global.list;
#X text 150 898 global named list object;
#X obj 20 925 cnv 5 27 19 empty empty lfo 0 17 0 17 -262144 -49933 0;
#X obj 20 954 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 965 lfo.impulse~;
#X text 150 965 Unit-amplitude low-frequency impulse train;
#X obj 30 992 lfo.square~;
#X text 150 992 Positive low frequence square wave;
#X obj 30 1019 lfo.tri~;
#X text 150 1019 Positive unit-amplitude low frequency triangle wave;
#X obj 20 1046 cnv 5 37 19 empty empty list 0 17 0 17 -262144 -49933
0;
#X obj 20 1075 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1086 list.apply_to;
#X text 150 1086 modifies list value at specified position \,
filtering it via external object\.;
#X obj 30 1123 list.at;
#X text 150 1123 returns list element at given position;
#X obj 30 1150 list.each;
#X text 150 1150 maps each list value via external object(s);
#X obj 30 1177 list.first;
#X text 150 1177 returns first list element;
#X obj 30 1204 list.last;
#X text 150 1204 returns last list element;
#X obj 30 1231 list.length;
#X text 150 1231 returns the number of elements in the list\.;
#X obj 30 1258 list.max;
#X text 150 1258 returns largest element in the list;
#X obj 30 1285 list.min;
#X text 150 1285 returns smallest element in the list;
#X obj 30 1312 list.sort;
#X text 150 1312 sorts list values by ascending order;
#X obj 20 1339 cnv 5 38 19 empty empty live 0 17 0 17 -262144 -49933
0;
#X obj 20 1368 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1379 live.capture~;
#X text 150 1379 record up to 8s of sound and playback the recorded
sound in loop;
#X obj 20 1416 cnv 5 38 19 empty empty math 0 17 0 17 -262144 -49933
0;
#X obj 20 1445 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1456 math.abs;
#X text 150 1456 absolute value function;
#X obj 30 1483 math.acos;
#X text 150 1483 arc cosine function;
#X obj 30 1510 math.acosh;
#X text 150 1510 inverse hyperbolic cosine function;
#X obj 30 1537 math.asin;
#X text 150 1537 arc sine function;
#X obj 30 1564 math.asinh;
#X text 150 1564 inverse hyperbolic sine function;
#X obj 30 1591 math.atan;
#X text 150 1591 arc tangent function;
#X obj 30 1618 math.atanh;
#X text 150 1618 inverse hyperbolic tangent function;
#X obj 30 1645 math.cbrt;
#X text 150 1645 cube root function;
#X obj 30 1672 math.ceil;
#X text 150 1672 round to smallest integral value not less than input
value;
#X obj 30 1699 math.cos;
#X text 150 1699 cosine function;
#X obj 30 1726 math.cosh;
#X text 150 1726 hyperbolic cosine function;
#X obj 30 1753 math.e;
#X text 150 1753 mathematical constant \, base of the natural
logarithm;
#X obj 30 1780 math.exp;
#X text 150 1780 exponential functions;
#X obj 30 1807 math.exp2;
#X text 150 1807 exponential functions;
#X obj 30 1834 math.floor;
#X text 150 1834 round to largest integral value not greater than x;
#X obj 30 1861 math.inf;
#X text 150 1861 infinity value that cannot be represented accurately;
#X obj 30 1888 math.log;
#X text 150 1888 logarithm functions;
#X obj 30 1915 math.log10;
#X text 150 1915 logarithm functions;
#X obj 30 1942 math.log2;
#X text 150 1942 logarithm functions;
#X obj 30 1969 math.nan;
#X text 150 1969 Not a Number \, unrepresentable value;
#X obj 30 1996 math.pi;
#X text 150 1996 mathematical constant;
#X obj 30 2023 math.round;
#X text 150 2023 round to integral value \, regardless of rounding
direction;
#X obj 30 2050 math.sin;
#X text 150 2050 sine function;
#X obj 30 2077 math.sinh;
#X text 150 2077 hyperbolic sine function;
#X obj 30 2104 math.sqrt;
#X text 150 2104 square root function;
#X obj 30 2131 math.tan;
#X text 150 2131 tangent function;
#X obj 30 2158 math.tanh;
#X text 150 2158 hyperbolic tangent function;
#X obj 30 2185 math.trunc;
#X text 150 2185 truncate to integer value;
#X obj 20 2212 cnv 5 28 19 empty empty osc 0 17 0 17 -262144 -49933 0;
#X obj 20 2241 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2252 osc.impulse~;
#X text 150 2252 Bandlimited impulse train generator;
#X obj 30 2279 osc.pulse~;
#X text 150 2279 Bandlimited pulse train oscillator\. ;
#X obj 30 2306 osc.saw~;
#X text 150 2306 Bandlimited saw wave oscillator;
#X obj 30 2333 osc.sinfb~;
#X text 150 2333 sine oscilator with feedback;
#X obj 30 2360 osc.square~;
#X text 150 2360 Bandlimited square wave oscillator;
#X obj 30 2387 osc.tri~;
#X text 150 2387 Bandlimited triangle wave oscillator;
#X obj 20 2414 cnv 5 37 19 empty empty pass 0 17 0 17 -262144 -49933
0;
#X obj 20 2443 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2454 pass.changed;
#X text 150 2454 rejects redundant input values;
#X obj 30 2481 pass.if;
#X text 150 2481 pass values that accepted by predicate object;
#X obj 20 2508 cnv 5 99 19 empty empty predicates 0 17 0 17 -262144
-49933 0;
#X obj 20 2537 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2548 is_any;
#X text 150 2548 checks if input data has *any* type;
#X obj 30 2575 is_bang;
#X text 150 2575 checks if input data has *bang* type;
#X obj 30 2602 is_even;
#X text 150 2602 checks if input number is even;
#X obj 30 2629 is_float;
#X text 150 2629 checks if input data has *float* type;
#X obj 30 2656 is_list;
#X text 150 2656 checks if input data has *list* type;
#X obj 30 2683 is_odd;
#X text 150 2683 checks if input number is odd;
#X obj 30 2710 is_pointer;
#X text 150 2710 checks if input data has *pointer* type;
#X obj 30 2737 is_symbol;
#X text 150 2737 checks if input data has *symbol* type;
#X obj 20 2764 cnv 5 58 19 empty empty system 0 17 0 17 -262144 -49933
0;
#X obj 20 2793 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2804 system.memsize;
#X text 150 2804 returns the size of physical memory (RAM) in bytes
round to float data type\.;
#X obj 30 2841 system.memused;
#X text 150 2841 returns the process physical memory use - current and
peak;
#X obj 1 1 cnv 5 597 40 empty empty ceammc 20 20 0 20 -104026 -4096 0;
#X obj 1 2868 cnv 5 597 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 2868 version: v0\.1 \, license: GPL3;
#X obj 20 2884 pddp/pddplink https://github.com/uliss/pure-data -text
https://github.com/uliss/pure-data;