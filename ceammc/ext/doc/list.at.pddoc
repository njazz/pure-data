<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="list.at">
        <title>list.at</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>returns list element at given position</description>
            <license>GPL3</license>
            <library>ceammc</library>
            <category>list</category>
            <keywords>list</keywords>
            <since>0.1</since>
            <also>
                <see>list.apply_to</see>
            </also>
        </meta>
        <info>
            <par>Returns the element at the given index position in the list.</par>
            <par>@rel property allows to acess elements in range (-LIST_SIZE, LIST_SIZE). Negative
            index means position from the end of the list. For example: -1 returns last
            element.</par>
            <par>@clip property: if element index &lt; 0 - first element returned. If element index
            &gt;= LIST_SIZE last element returned.</par>
            <par>@wrap property: in range [0, LIST_SIZE) ordinal elements are returned. Other
            indexes are wrapped by modulo division.</par>
        </info>
        <arguments>
            <argument name="position" type="int">position</argument>
            <argument name="method" type="symbol">@rel(default), @clip, @fold or @wrap. They are
            aliases for property: @method rel, @method clip, @method fold and @method
            wrap</argument>
        </arguments>
        <inlets>
            <inlet>
                <xinfo on="list">Input list</xinfo>
            </inlet>
            <inlet>
                <xinfo on="int">position</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>element at the given index position</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[1 2 3 4 5( [F]  [1 2 3 4 5( [F]
|           |.   |           |.
[list.at -1  ]   [list.at @clip]
|                |
[F]              [F]


[1 2 3 4 5( [F]  [1 2 3 4 5( [F]
|           |.   |           |.
[list.at @wrap]  [list.at @fold]
|                |
[F]              [F]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
