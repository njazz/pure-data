#N canvas 0 0 685 555 12;
#X obj 443 50 cnv 1 222 21 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 443 50 Breakpoint function GUI object;
#X obj 1 1 cnv 5 682 40 empty empty ui.bpfunc 20 20 0 20 -104026 -4096
0;
#X obj 50 133 ui.bpfunc @size 200 150;
#X obj 20 290 cnv 1 661 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 295 cnv 5 63 16 empty empty methods: 0 14 0 14 -262144
-49933 0;
#X msg 125 300 clear;
#X text 230 300 Clears everything and makes default breakpoint
function\.;
#X msg 125 327 drag_limit;
#X text 230 327 If not zero \, each point in bpf cannot be dragged
beyond neighbors - useful for standard envelopes (boolean);
#X msg 125 364 auto_send;
#X text 230 364 If not zero \, always sends message when edited\.;
#X msg 125 391 bang;
#X text 230 391 Outputs list of x y pairs for each point in specified
ranges for x and y;
#X msg 125 428 raw;
#X text 230 428 Outputs list of x y pairs for each point \, in 0\.\.1
range;
#X msg 125 455 vline;
#X text 230 455 Outputs messages for vline~ object\. Ignores special
envelope flags (segments) and outputs full graph;
#X msg 125 492 vline_seg;
#X text 230 492 Outputs specified segment of breakpoint function in
the format suited for vline~ object;
#X msg 125 529 vline_tgl;
#X text 230 529 Outputs first segment for argument 1 and second for 0
- this can be used to drive standard envelopes with a toggle;
#X msg 125 566 seg_count;
#X text 230 566 Returns the number of segments in a breakpoint
function;
#X msg 125 593 set_rawbpf;
#X text 230 593 Replaces all values with the supplied pairs of x y
values in 0\.\.1 range;
#X msg 125 630 range_x;
#X text 230 630 output range of x coordinate of the point (float);
#X msg 125 657 range_y;
#X text 230 657 output range of y coordinate of the point (float);
#X msg 125 684 shift_x;
#X text 230 684 output shift of x coordinate of the point (float);
#X msg 125 711 shift_y;
#X text 230 711 output shift of y coordinate of the point (float);
#X msg 125 738 sel;
#X text 230 738 marks a point specified by index (integer number);
#X msg 125 765 set;
#X text 230 765 Takes three arguments \, sets point with the index of
the first argument value with the value of arguments #2 and #3\. X and
y values should be specified in the current range of bpfunc object;
#X msg 125 830 set_raw;
#X text 230 830 Takes three arguments \, sets point with the index of
the first argument value with the value of arguments #2 and #3\. X and
y values should be specified in range 0\.\.1;
#X msg 125 881 get;
#X text 230 881 Get point coordinates for specified index (integer
number) \, returns scaled values;
#X msg 125 918 get_raw;
#X text 230 918 Get point coordinates for specified index (integer
number) \, returns values in range 0\.\.1;
#X msg 125 955 add;
#X text 230 955 Adds new point to the specified coordinates\. X and y
values should be specified in current ranges;
#X msg 125 992 add_raw;
#X text 230 992 Adds new point to the specified coordinates\. X and y
values should be specified in 0\.\.1 range;
#X msg 125 1029 del;
#X text 230 1029 Deletes the point with the specified index;
#X msg 125 1056 end_seg;
#X text 230 1056 Needs point number and boolean value\. Marks the end
of segment\. Useful for complex envelopes with sustain etc\.;
#X msg 125 1093 lock_x;
#X text 230 1093 Needs point number and boolean value\. If value is
nonzero \, prevents the change of x coordinate with a mouse;
#X msg 125 1130 lock_y;
#X text 230 1130 Needs point number and boolean value\. If value is
nonzero \, prevents the change of y coordinate with a mouse;
#X msg 125 1167 join_next;
#X text 230 1167 Needs point number and boolean value\. If value is
nonzero \, links y coordinate of specified and next point\. Useful for
AHR envelopes etc;
#X obj 20 1228 cnv 1 661 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1233 cnv 5 54 16 empty empty inlets: 0 14 0 14 -262144
-49933 0;
#X text 125 1238 1\.;
#X text 150 1238 *list*;
#X text 230 1238 Messages \. ;
#X obj 20 1266 cnv 1 661 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1271 cnv 5 63 16 empty empty outlets: 0 14 0 14 -262144
-49933 0;
#X text 125 1276 1\.;
#X text 230 1276 Breakpoint function points in various formats;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title ui @url ceammc.ui-help.pd;
#X obj 1 1324 cnv 5 682 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1327 library: ceammc v0\.1;
#X text 515 1339 see also:;
#X obj 585 1342 ui.link @title [ui.sliders] @bgcolor 0.78431 0.78431
0.78431 @url ui.sliders-help.pd;
#N canvas 10 1346 400 250 info 0;
#X obj 1 1 cnv 1 107 247 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0\.1;
#X text 10 54 object:;
#X text 120 54 ui\.bpfunc;
#X text 10 76 category:;
#X text 120 76 ui;
#X text 10 98 since:;
#X text 120 98 0\.1;
#X text 10 120 authors:;
#X text 120 120 Alex Nadzharov \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3;
#X text 10 164 keywords:;
#X text 120 164 ui \, env \, adsr \, breakpoint \, function;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 228 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 228 generated by pddoc;
#X restore 10 1346 pd info;